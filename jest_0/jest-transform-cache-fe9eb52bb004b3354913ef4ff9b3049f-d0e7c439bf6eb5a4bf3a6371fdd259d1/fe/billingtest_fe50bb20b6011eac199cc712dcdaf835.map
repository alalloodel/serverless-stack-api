{"version":3,"sources":["billing.test.js"],"names":["test","storage","cost","expectedCost","expect","toEqual"],"mappings":";;AAAA;;AAEAA,IAAI,CAAC,aAAD,EAAgB,YAAM;AACxB,MAAMC,OAAO,GAAG,EAAhB;AAEA,MAAMC,IAAI,GAAG,IAAb;AACA,MAAMC,YAAY,GAAG,+BAAcF,OAAd,CAArB;AAEAG,EAAAA,MAAM,CAACF,IAAD,CAAN,CAAaG,OAAb,CAAqBF,YAArB;AACD,CAPG,CAAJ;AASAH,IAAI,CAAC,aAAD,EAAgB,YAAM;AACxB,MAAMC,OAAO,GAAG,GAAhB;AAEA,MAAMC,IAAI,GAAG,KAAb;AACA,MAAMC,YAAY,GAAG,+BAAcF,OAAd,CAArB;AAEAG,EAAAA,MAAM,CAACF,IAAD,CAAN,CAAaG,OAAb,CAAqBF,YAArB;AACD,CAPG,CAAJ;AASAH,IAAI,CAAC,cAAD,EAAiB,YAAM;AACzB,MAAMC,OAAO,GAAG,GAAhB;AAEA,MAAMC,IAAI,GAAG,KAAb;AACA,MAAMC,YAAY,GAAG,+BAAcF,OAAd,CAArB;AAEAG,EAAAA,MAAM,CAACF,IAAD,CAAN,CAAaG,OAAb,CAAqBF,YAArB;AACD,CAPG,CAAJ","sourcesContent":["import { calculateCost } from \"../libs/billing-lib\";\n\ntest(\"Lowest tier\", () => {\n  const storage = 10;\n\n  const cost = 4000;\n  const expectedCost = calculateCost(storage);\n\n  expect(cost).toEqual(expectedCost);\n});\n\ntest(\"Middle tier\", () => {\n  const storage = 100;\n\n  const cost = 20000;\n  const expectedCost = calculateCost(storage);\n\n  expect(cost).toEqual(expectedCost);\n});\n\ntest(\"Highest tier\", () => {\n  const storage = 101;\n\n  const cost = 10100;\n  const expectedCost = calculateCost(storage);\n\n  expect(cost).toEqual(expectedCost);\n});"]}